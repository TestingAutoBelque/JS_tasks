// var res1 = 'number' + 3 + 3;
// console.log(res1)
/*number33
до строки була виконана конкантенація*/

// var res2 = null + 3;
// console.log(res2)
/*3
Коли null, а після нього +, то null перетворюється на число*/

// var res3 = 5 && "qwerty";
// console.log(res3)
/*qwerty 
Оператор && бере останнє з порівнюваних значень*/

// var res4 = +'40' + +'2' + "hillel";
// console.log(res4)
/*42hillel 
Спочатку 40 - стало числом, потім 2 стало числом, а потім конкантенація зі строкою */

// var res5 = '10' - 5 === 6;
// console.log(res5)
/*false
Знак - після строки, в якій записано число перетворює його на число.
10 - 5 = 5
5 !== 6 */

// var res6 = true + false;
// console.log(res6)
/*1
Знак + автоматично переводить у числа
1 + 0 = 1 */

// var res7 = '4px' - 3;
// console.log(res7)
/*NaN
Коли від строки відняти число - буде NaN
Від строки неможна віднімати число */

// var res8 = '4' - 3;
// console.log(res8)
/*1
Коли строка записана у вигляді числа, то знак - автоматично перетворює її у число
4 - 3 = 1 */

// var res9 = '6' + 3 ** 0;
// console.log(res9)
/*61
Спочатку виконується зведення в ступінь: 3**0 = 1
А коли вже додається до строки, то тут вже не переводиться у число, тому виконується конкантенація строк */

// var res10 = 12 / '6';
// console.log(res10)
/*2
При діленні строка, в якій число перетворюється на число
12 / 6 = 2 */

// var res11 = '10' + (5 === 6);
// console.log(res11)
/*10false
Спочатку виконуєься дія в дужках, результатом буде false.
А коли вже доходить до операції +, то не відбувається перетворення строки до числа.
Виходить '10' + false */

// console.log(null == '')
/*false
null не дорівнює пустій строці, так як це різні типи.
null - це об'єкт, а пуста строка це нічого */

// var res13 = 3 ** (9 / 3);
// console.log(res13)
/*Спочатку виконується операція в дужках: 9 / 3 = 3
Потім зведення до ступіню: 3 ** 3 = 27 */

// console.log(!!'false' == !!'true')
/*true
Нестрога нерівність переводить значення строк до boolean, а оператор !! означає хибноподібне значення, тому у випадку нестрогої нерівності ствердження рівні*/

// console.log(0 || '0' && 1)
/*1
Спочатку виконується оператор ||: 0 || дійсне значення = true = 1.
Потім виконується оператор &&: 1 && 1 = 1 */

// console.log((+null == false) < 1)
/*false
Спочатку виконується дія в дужках: +null - приводить до 0. При нестрогій рівності false також приводиться до 0.
0 == 0 ==> true
При порівнянні отримане true приводиться до 1
1 < 1 ==> false */

// console.log(false && true || true)
/*true
Спочатку виконується &&: false && true ==> false
Потім виконується ||: false || true ==> true */

// console.log(false && (false || true))
/*false
Спочатку виконується операція в дужках: false || true ==> true
Потім виконується &&: false && true ==> false */

console.log((+null == false) < 1 ** 5)
/*false
+null - приводить до чиса, тобто null ==> 0.
При нестрогій нерівності false також приводиться до 0
0 == 0 ==> true

При операторі порівняння true приводиться до 1.
1 < 1 ** 5
1 ** 5 = 1
1 < 1 ==> false */